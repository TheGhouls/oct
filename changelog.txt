0.1 to 0.1.1
============

* add nr management for get_form method and auth method
* auth method now passing kwargs to get_form

0.1.1 to 0.2
============

* replace beautifoulsoup4 by lxml for parsing statics files

0.2 to 0.2.1
============

* added a minimal-browser for replacing mechanize

0.2.1 to 0.2.2
==============

* Improve minimal-browser, now handles features like :
    - auth
    - full session support
    - better form management
    - multiple select
    - bad action value for form tag

0.2.2 to 0.3
============

* Minimal browser ready
* Added more features to the browser
* resetting session for each thread at the end of the transaction forcing each user to have different session
* improve results writer for multiples custom timers in same test
* checked compatibility of the browser with python3.4
* 2to3 passed for browser, no change needed
* update GenericTransaction, now using custom browser
* Old GenericTransaction methods still unchanged
* Updated documentation examples for new browser
* Global documentation update

0.3 to 0.3.1
============

* Update requirements in setup for cssselect

0.3.1 to 0.3.2
==============

* Remove matplotlib from setup dependencies
* now using pygal for graphs renders
* updated multimechanize graph and results file
* now generating svg files for graph
* clean up dependencies globaly
* updated css file for graph size

0.3.2 to 0.3.3
==============

* refactore multi-mechanize core for python3
* compatibility for python3.4 started
* keep compatibility for python >= 2.7 using six
* added six to requirements
* tested basic functionality, all ok for both python 2.7 and python 3.4
* refactor most of the documentation
* update graph render

0.3.3 to 0.3.4
==============

* Global code cleaning
* improve python3 support
* update setup long_description
* update documentation
* starting unittest
* fix warning for browser, manually close connection after a request

0.3.4 to 0.3.5
==============

* update browser and add headers feature. Can add or delete a header or set all headers
* abandon get_statics method from generic transaction, not representative of real case
* get_statics -> use csv_file and load each url as user will be more performant...
* fix a bug inside check_status_response function
* update command oct-run
* update newproject for adding celery configuration
* added full celery support for running test through the oct-run command
* keep multimech-run command
* results.csv file now updated via logger object with oct-run
* transaction number no longer displayed in results
* oct-run will now clean all tasks running if KeyBoardInterrupt exception occur
* update browser for headers support
* fix a bug if custom configuration section is used

0.3.5 to 0.3.6
==============

* update the result writer, results are now output in sqlite database
* add the new `oct-tocsv` command to convert sqlite results file to csv manualy
* add travis support
* remove the browser from the core, you can use the oct-browser independant package
* all configurations file are now created using jinja2 and all files are now located in oct/utilities/templates
* all stats results are now refactored and improved, remove old results calculations form multimechanize
* report.html is now a jinja2 template and can be override in the test folder
* improve all unit tests
* add peewee in dependencies for sqlite manipulation and future postgresql support
* update configuration files, now using json file for the global configuration. Json is cleaner and simpler to use for configuration
* improve results output
* add oct-rebuild-results commands to rebuild results
